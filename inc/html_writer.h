/****************************************************************************
**
** HTML writer.
**
****************************************************************************/

//Include only once
#ifndef HTML_WRITER_H
#define HTML_WRITER_H

//////////////////////////////////////////////////////////////////////////////
//                         I N C L U D E S                                  //
//////////////////////////////////////////////////////////////////////////////

/* System Library Include
*/
#include <list>
#include <string>

/* Application Local Include
*/
#include "chordpro_parser.h"

using namespace std;

//////////////////////////////////////////////////////////////////////////////
//                 C O N S T A N T S   D E F I N I T I O N S                //
//////////////////////////////////////////////////////////////////////////////

// No public constants


//////////////////////////////////////////////////////////////////////////////
//                  M A C R O S    D E F I N I T I O N S                    //
//////////////////////////////////////////////////////////////////////////////

// No public macros


//////////////////////////////////////////////////////////////////////////////
//                    T Y P E S    D E F I N I T I O N S                    //
//////////////////////////////////////////////////////////////////////////////

// No public types


//////////////////////////////////////////////////////////////////////////////
//                   G L O B A L   V A R I A B L E S                        //
//////////////////////////////////////////////////////////////////////////////

// No global variables


//////////////////////////////////////////////////////////////////////////////
//                    C L A S S    D E C L A R A T I O N                    //
//////////////////////////////////////////////////////////////////////////////

class HTMLWriter
{
public:
	HTMLWriter(const string &file_name);
	void open(void);
	size_t paint(ChordProData &src);
	void close(void);

private:
	void reinit(void);
	void startline(void);
	void putlyrics(string scan);
	void putchord(string name);

private:
	ofstream ofs;

	string		m_FileName;
	int xLyrics;
	int xChords;
	int yLyrics;

	int xMax;
	int yMax;
};


#endif // HTML_WRITER_H
