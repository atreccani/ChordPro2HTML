//////////////////////////////////////////////////////////////////////////////
//                         I N C L U D E S                                  //
//////////////////////////////////////////////////////////////////////////////

/* System Library Include
*/
#include <codecvt>
#include <fcntl.h>  
#include <fstream>
#include <io.h>
#include <iostream>
#include <locale>

/* Application Local Include
*/
#include "console_utf8.h"

//////////////////////////////////////////////////////////////////////////////
//                 C O N S T A N T S   D E F I N I T I O N S                //
//////////////////////////////////////////////////////////////////////////////

// No local constants


//////////////////////////////////////////////////////////////////////////////
//                  M A C R O S    D E F I N I T I O N S                    //
//////////////////////////////////////////////////////////////////////////////

// No local macros


//////////////////////////////////////////////////////////////////////////////
//                    T Y P E S    D E F I N I T I O N S                    //
//////////////////////////////////////////////////////////////////////////////

// No local type definitions


//////////////////////////////////////////////////////////////////////////////
//                    C L A S S    D E F I N I T I O N S                    //
//////////////////////////////////////////////////////////////////////////////

u8ostream UTF8::cout;

u8istream UTF8::cin;

void UTF8::init()
{
	_setmode(_fileno(stdout), _O_U16TEXT);
}

//////////////////////////////////////////////////////////////////////////////
//                   L O C A L S    D E F I N I T I O N S                   //
//////////////////////////////////////////////////////////////////////////////

static wstring_convert<codecvt_utf8_utf16<wchar_t>> converter;


//////////////////////////////////////////////////////////////////////////////
//                 G L O B A L S    D E F I N I T I O N S                   //
//////////////////////////////////////////////////////////////////////////////

// No global variables


//////////////////////////////////////////////////////////////////////////////
//                     P U B L I C   F U N C T I O N S                      //
//////////////////////////////////////////////////////////////////////////////

u8ostream& operator<< (u8ostream &u8out, const string &utf8_str)
{
	wstring wstr = converter.from_bytes(utf8_str);
	
	wcout << wstr;
 	
	return u8out;
}

// insertion operator overload  for I/O manipulator like endl
u8ostream& operator<<(u8ostream& u8out, std::ostream& (*pf)(std::ostream&))
{
	ostringstream locstream;
	pf(locstream);
	wstring wstr = converter.from_bytes(locstream.str());

	wcout << wstr;
	
	return u8out;
}

u8istream& operator>> (u8istream &u8in, string &utf8_str)
{
	wstring wstr;
	wcin >> wstr;

	utf8_str = converter.to_bytes(wstr);
 
	return u8in;
}
